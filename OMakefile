#*********************************************************************#
#                                                                     #
#                          Caml Images                                #
#                                                                     #
#            Franè¼Ÿis Pessaux, projet Cristal, INRIA Rocquencourt     #
#            Pierre Weis, projet Cristal, INRIA Rocquencourt          #
#            Jun Furuse, projet Cristal, INRIA Rocquencourt           #
#                                                                     #
#  Copyright 1999-2004,                                               #
#  Institut National de Recherche en Informatique et en Automatique.  #
#  Distributed only by permission.                                    #
#                                                                     #
#*********************************************************************#

VERSION=3.3.0

# Specify non standard include directories
INCLUDES[]=
  /usr/include/X11
  /usr/local/include

# Specify non standard library directories
LDFLAGS[]=

# Specify directories where X's rgb.txt can be found
PATH_RGB_TXT[]=
  /etc/X11/rgb.txt
  /usr/share/X11

BYTE_ENABLED=1
NATIVE_ENABLED=1

OCAMLMKLIB=ocamlmklib
OCAMLMKLIB_EXISTS = $(CheckProg $(OCAMLMKLIB))
if $(not $(OCAMLMKLIB_EXISTS))
   eprintln(This project requires ocamlmklib, but is was not found.)
   exit 1

.STATIC:
  CFLAGS = $(addprefix -I , $(INCLUDES))

  WORD_SIZE = $(Word_size)

  LDFLAGS[]=
  FORMAT_SUBPACKAGES[]=
  SUBPACKAGES[]=

  # for src/META
  PACKAGE_NAME=camlimages
  PACKAGE_VERSION=$(VERSION)

#  HAVE_gif=hoge
#  Have_library(gif, gif, gif_lib.h, DGifOpenFileName)

  HAVE_GIF = $(Check_header_library gif, gif_lib.h, DGifOpenFileName)
  SUPPORT_GIF = $(Check_header_library gif, gif_lib.h, DGifOpenFileName)
  LDFLAGS_gif=
  if $(SUPPORT_GIF)
    LDFLAGS_gif=-lgif
    FORMAT_SUBPACKAGES+=gif
    SUBPACKAGES+=gif
    export

  HAVE_Z = $(Check_header_library z, zlib.h, zlibVersion)
  HAVE_PNG = $(Check_header_library png, png.h, png_create_read_struct)
  SUPPORT_PNG = $(and $(HAVE_Z) $(HAVE_PNG))
  LDFLAGS_png=
  if $(SUPPORT_PNG)
    LDFLAGS_png=-lpng -lz
    FORMAT_SUBPACKAGES+=png
    SUBPACKAGES+=png
    export

  HAVE_JPEG = $(Check_header_library jpeg, jpeglib.h, jpeg_read_header)
  SUPPORT_JPEG = $(HAVE_JPEG)
  LDFLAGS_jpeg=
  if $(SUPPORT_JPEG)
    LDFLAGS_jpeg=-ljpeg
    FORMAT_SUBPACKAGES+=jpeg
    SUBPACKAGES+=jpeg
    export

  HAVE_TIFF = $(Check_header_library tiff, tiff.h, TIFFOpen)
  SUPPORT_TIFF = $(and $(HAVE_Z) $(HAVE_JPEG) $(HAVE_TIFF))
  LDFLAGS_tiff=
  if $(SUPPORT_TIFF)
    LDFLAGS_tiff=$(array -ltiff -ljpeg -lz)
    FORMAT_SUBPACKAGES+=tiff
    SUBPACKAGES+=tiff
    export

  HAVE_XPM = $(Check_header_library Xpm, xpm.h, XpmReadFileToXpmImage)
  SUPPORT_XPM = $(HAVE_XPM)
  LDFLAGS_xpm=
  if $(SUPPORT_XPM)
    LDFLAGS_xpm=-lXpm
    FORMAT_SUBPACKAGES+=xpm
    SUBPACKAGES+=xpm
    export

  SUPPORT_LABLGTK2 = $(Check_ocamlfind_package lablgtk2)
  if $(SUPPORT_LABLGTK2)
    SUBPACKAGES+=lablgtk2
    export

  SUPPORT_GRAPHICS = $(Check_ocamlfind_package graphics)
  if $(SUPPORT_GRAPHICS)
    SUBPACKAGES+=graphics
    export

  SUPPORT_FREETYPE = $(Check_prog_in_path freetype-config)
  PATH_FREETYPE_CONFIG = $(WHERE)
  LDFLAGS_freetype=
  if $(SUPPORT_FREETYPE)
    CFLAGS= $(CFLAGS) $(shell freetype-config --cflags)
    LDFLAGS_freetype= $(shell freetype-config --libs)
    export
  if $(SUPPORT_FREETYPE)
    SUBPACKAGES+=freetype
    export

  SUPPORT_PS = $(Check_prog_in_path gs)
  PATH_GS = $(WHERE)
  if $(SUPPORT_PS)
    FORMAT_SUBPACKAGES+=ps
    SUBPACKAGES+=ps
    export

  SUPPORT_RGB_TXT = $(Check_file_in_path $(PATH_RGB_TXT), rgb.txt)
  PATH_RGB_TXT = $(WHERE)

  export

println(--- Configuring)
println(Remove .omakedb if you think results are not up-to-date.)
println(---)
println(wordsize  $(WORD_SIZE))
println(--- C libraries)
println(libgif:   $(HAVE_GIF))
println(libpng:	  $(HAVE_PNG))
println(libjpeg:  $(HAVE_JPEG))
println(libtiff:  $(HAVE_TIFF))
println(libxpm:	  $(HAVE_XPM))
println(libz:	  $(HAVE_Z))
println(--- Subpackages)
println(gif:      $(SUPPORT_GIF) \($(string $(LDFLAGS_gif)\)))
println(png:	  $(SUPPORT_PNG) \($(string $(LDFLAGS_png)\)))
println(jpeg:	  $(SUPPORT_JPEG) \($(string $(LDFLAGS_jpeg)\)))
println(tiff:	  $(SUPPORT_TIFF) \($(string $(LDFLAGS_tiff)\)))
println(xpm:	  $(SUPPORT_XPM) \($(string $(LDFLAGS_xpm)\)))
println(freetype: $(SUPPORT_FREETYPE) \($(PATH_FREETYPE_CONFIG)\) \($(string $(LDFLAGS_freetype))\))
println(ps:       $(SUPPORT_PS) \($(PATH_GS)\))
println(rgb.txt:  $(SUPPORT_RGB_TXT) \($(PATH_RGB_TXT)\))
println(lablgtk2: $(SUPPORT_LABLGTK2))
println(--- Summary)
println(formats:  $(string $(FORMAT_SUBPACKAGES)))
println(subpackages:  $(string $(SUBPACKAGES)))
println(CFLAGS:   $(string $(CFLAGS)))
println(---)

# for config.h
CGeneratedFiles(config.h)
section:
  PACKAGE=\"camlimages\"
  PACKAGE_BUGREPORT=\"jun.furuse@gmail.com\"
  PACKAGE_NAME=$(PACKAGE)
  PACKAGE_STRING=\"camlimages $(VERSION)\"
  PACKAGE_TARNAME=$(PACKAGE)
  PACKAGE_VERSION=\"$(VERSION)\"
  SIZEOF_LONG=$(WORD_SIZE)
  VERSION=$(PACKAGE_VERSION)
  ConfReplaceConfigH(config.h)

.SUBDIRS: src test examples
