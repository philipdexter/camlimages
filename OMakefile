#*********************************************************************#
#                                                                     #
#                          Caml Images                                #
#                                                                     #
#            Franè¼Ÿis Pessaux, projet Cristal, INRIA Rocquencourt     #
#            Pierre Weis, projet Cristal, INRIA Rocquencourt          #
#            Jun Furuse, projet Cristal, INRIA Rocquencourt           #
#                                                                     #
#  Copyright 1999-2004,                                               #
#  Institut National de Recherche en Informatique et en Automatique.  #
#  Distributed only by permission.                                    #
#                                                                     #
#*********************************************************************#

VERSION=3.3.0

# Specify non standard include directories
INCLUDES[]=
  /usr/include/X11
  /usr/local/include

# Specify non standard library directories
LDFLAGS[]=

# Specify directories where X's rgb.txt can be found
PATH_RGB_TXT[]=
  /etc/X11/rgb.txt
  /usr/share/X11

OCAMLMKLIB=ocamlmklib
OCAMLMKLIB_EXISTS = $(CheckProg $(OCAMLMKLIB))
if $(not $(OCAMLMKLIB_EXISTS))
   eprintln(This project requires ocamlmklib, but is was not found.)
   exit 1

BYTE_ENABLED=1
NATIVE_ENABLED=1

.STATIC:
  CFLAGS = $(addprefix -I , $(INCLUDES))

  WORD_SIZE = $(Word_size)

  HAVE_GIF = $(Check_header_library gif, gif_lib.h, DGifOpenFileName)
  HAVE_Z = $(Check_header_library z, zlib.h, zlibVersion)
  HAVE_PNG = $(Check_header_library png, png.h, png_create_read_struct)
  HAVE_JPEG = $(Check_header_library jpeg, jpeglib.h, jpeg_read_header)
  HAVE_TIFF = $(Check_header_library tiff, tiff.h, TIFFOpen)

  SUPPORT_GIF = $(HAVE_GIF)
  SUPPORT_PNG = $(and $(HAVE_Z) $(HAVE_PNG))
  SUPPORT_JPEG = $(HAVE_JPEG)
  SUPPORT_TIFF = $(and $(HAVE_Z) $(HAVE_JPEG) $(HAVE_TIFF))

  SUPPORT_LABLGTK2 = $(Check_ocamlfind_package lablgtk2)
  SUPPORT_XPM = $(Check_header_library Xpm, xpm.h, XpmReadFileToXpmImage)

  SUPPORT_FREETYPE = $(Check_prog_in_path freetype-config)
  PATH_FREETYPE_CONFIG = $(WHERE)
  if $(SUPPORT_FREETYPE)
    CFLAGS= $(CFLAGS) $(shell freetype-config --cflags)
    global.BUILDING_LDFLAGS= $(BUILDING_LDFLAGS) $(shell freetype-config --libs)
    export # for CFLAGS

  SUPPORT_PS = $(Check_prog_in_path gs)
  PATH_GS = $(WHERE)

  SUPPORT_RGB_TXT = $(Check_file_in_path $(PATH_RGB_TXT), rgb.txt)
  PATH_RGB_TXT = $(WHERE)

  # LIBS=$(BUILDING_LIBS)
  LDFLAGS=$(BUILDING_LDFLAGS)

  # for src/META
  PACKAGE_VERSION=$(VERSION)
  REQUIRES=unix
  if $(SUPPORT_LABLGTK2)
    REQUIRES+=lablgtk2
  PACKAGE_NAME=camlimages

println(---)
println(Configuring)
println(Remove .omakedb if you think results are not up-to-date.)
println(---)
println(wordsize  $(WORD_SIZE))
println(gif:      $(SUPPORT_GIF))
println(png:	  $(SUPPORT_PNG))
println(jpeg:	  $(SUPPORT_JPEG))
println(tiff:	  $(SUPPORT_TIFF))
println(xpm:	  $(SUPPORT_XPM))
println(freetype: $(SUPPORT_FREETYPE) \($(PATH_FREETYPE_CONFIG)\))
println(ps:       $(SUPPORT_PS) \($(PATH_GS)\))
println(rgb.txt:  $(SUPPORT_RGB_TXT) \($(PATH_RGB_TXT)\))
println(lablgtk2: $(SUPPORT_LABLGTK2))
println(CFLAGS:   $(string $(CFLAGS)))
println(LDFLAGS:  $(string $(LDFLAGS)))
println(---)

# for config.h
CGeneratedFiles(config.h)
section:
  PACKAGE=\"camlimages\"
  PACKAGE_BUGREPORT=\"jun.furuse@gmail.com\"
  PACKAGE_NAME=$(PACKAGE)
  PACKAGE_STRING=\"camlimages $(VERSION)\"
  PACKAGE_TARNAME=$(PACKAGE)
  PACKAGE_VERSION=\"$(VERSION)\"
  SIZEOF_LONG=$(WORD_SIZE)
  VERSION=$(PACKAGE_VERSION)
  ConfReplaceConfigH(config.h)

.SUBDIRS: src test examples
